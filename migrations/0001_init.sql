create table
    user_ (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "username" varchar(32) unique,
        "email" varchar(256) unique,
        "password_hash" varchar(256)
    );

create table
    artist (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "name" varchar(64)
    );

create table
    followed_artist (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "user_id" int constraint "user_id_fk" references "user_" ("id"),
        "artist_id" int constraint "artist_id_fk" references "artist" ("id"),
        unique ("user_id", "artist_id")
    );

create table
    album (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "artist_id" int constraint "artist_id_fk" references "artist" ("id"),
        "released_at" timestamp,
        "name" varchar(64)
    );

create table
    liked_album (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "user_id" int constraint "user_id_fk" references "user_" ("id"),
        "album_id" int constraint "album_id_fk" references "album" ("id"),
        unique ("user_id", "album_id")
    );

create table
    song (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "album_id" int constraint "album_id_fk" references "album" ("id"),
        "order" int,
        "title" varchar(64),
        "duration" int,
        unique ("album_id", "order")
    );

create table
    liked_song (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "user_id" int constraint "user_id_fk" references "user_" ("id"),
        "song_id" int constraint "song_id_fk" references "song" ("id"),
        unique ("user_id", "song_id")
    );

create type playlist_visibility as enum ('public', 'private');

create table
    playlist (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "user_id" int constraint "user_id_fk" references "user_" ("id"),
        "visibility" playlist_visibility default 'public',
        "name" varchar(64),
        "description" text
    );

create table
    playlist_entry (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "playlist_id" int constraint "playlist_id_fk" references "playlist" ("id"),
        "song_id" int constraint "song_id_fk" references "song" ("id"),
        "order" int
    );

create table
    followed_playlist (
        "id" int primary key generated by default as identity,
        "created_at" timestamp default (now ()),
        "updated_at" timestamp,
        "user_id" int constraint "user_id_fk" references "user_" ("id"),
        "playlist_id" int constraint "playlist_id_fk" references "playlist" ("id"),
        unique ("user_id", "playlist_id")
    );
